<?php

namespace AppBundle\Repository;

/**
 * ParticularRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ParticularRepository extends \Doctrine\ORM\EntityRepository
{
    public function searchBack($data)
    {
        $qb = $this->createQueryBuilder('e')
            ->leftJoin('e.country', 'c')
            ->leftJoin('e.user', 'u')
            ->orderBy('e.id', 'DESC');

        if (!empty($data['firstName'])) {
            $qb->andWhere('e.firstName like :firstName')
                ->setParameter('firstName', '%' . $data['firstName'] . '%');
        }
        if (!empty($data['lastName'])) {
            $qb->andWhere('e.lastName like :lastName')
                ->setParameter('lastName', '%' . $data['lastName'] . '%');
        }
        if ("" !== ($data['civility'])) {
            $qb->andWhere('e.civility = :civility')
                ->setParameter('civility', $data['civility']);
        }
        if (!empty($data['email'])) {
            $qb->andWhere('u.email like :email')
                ->setParameter('email', '%' . $data['email'] . '%');
        }
        if (!empty($data['phone'])) {
            $qb->andWhere('e.phone like :phone')
                ->setParameter('phone', '%' . $data['phone'] . '%');
        }
        if (!empty($data['mobile'])) {
            $qb->andWhere('e.mobile like :mobile')
                ->setParameter('mobile', '%' . $data['mobile'] . '%');
        }
        if (!empty($data['fax'])) {
            $qb->andWhere('e.fax like :fax')
                ->setParameter('fax', '%' . $data['fax'] . '%');
        }
        if (!empty($data['country'])) {
            $qb->andWhere('c.id = :country')
                ->setParameter('country', $data['country']);
        }
        if (!empty($data['city'])) {
            $qb->andWhere('e.city like :city')
                ->setParameter('city', '%' . $data['city'] . '%');
        }
        if (!empty($data['address'])) {
            $qb->andWhere('e.address like :address')
                ->setParameter('address', '%' . $data['address'] . '%');
        }
        if (!empty($data['postCode'])) {
            $qb->andWhere('e.postCode like :postCode')
                ->setParameter('postCode', '%' . $data['postCode'] . '%');
        }
        if (!empty($data['corporateName'])) {
            $qb->andWhere('e.corporateName like :corporateName')
                ->setParameter('corporateName', '%' . $data['corporateName'] . '%');
        }
        if (!empty($data['taxRegistrationNumber'])) {
            $qb->andWhere('e.taxRegistrationNumber like :taxRegistrationNumber')
                ->setParameter('taxRegistrationNumber', '%' . $data['taxRegistrationNumber'] . '%');
        }
        if (!empty($data['activity'])) {
            $qb->andWhere('e.activity like :activity')
                ->setParameter('activity', '%' . $data['activity'] . '%');
        }
        if (!empty($data['pack'])) {
            $qb->andWhere('e.pack like :pack')
                ->setParameter('pack', '%' . $data['pack'] . '%');
        }
        if ("" !== ($data['enabled'])) {
            $qb->andWhere('u.enabled = :enabled')
                ->setParameter('enabled', $data['enabled']);
        }
        return $qb;
    }
}
