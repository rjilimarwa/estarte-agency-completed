# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    app.form.profile:
        class: AppBundle\Form\User\ProfileFormType
        tags:
            - { name: form.type, alias: app_user_profile }
        arguments:
            - '@security.authorization_checker'

    app.form.registration:
        class: AppBundle\Form\User\RegistrationFormType
        arguments:
            - '@router'
        tags:
            - { name: form.type, alias: app_user_registration }

    login_success_handler:
        class:      AppBundle\Security\Authentication\Handler\LoginSuccessHandler
        arguments:
            - '@router'
            - '@security.authorization_checker'
        tags:
            - { name: 'monolog.logger', channel: 'security' }

    app.registration_listener:
        class: AppBundle\Listener\RegistrationListener
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: kernel.event_subscriber }

    app.cacheimage_listener:
        class: AppBundle\Listener\CacheImageListener
        arguments:
            - '@liip_imagine.cache.manager'
        public: true
        tags:
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }

    twig.extension.intl: #require twig/extensions in composer.json
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    twig.country_extension:
        class: AppBundle\Twig\CountryExtension
        tags:
            - { name: twig.extension }

    app.twig_extension:
        class: AppBundle\Twig\AppExtension
        public: false
        tags:
            - { name: twig.extension }
#
    app.image_type_extension:
        class: AppBundle\Form\Extension\ImageTypeExtension
        tags:
            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FileType }

    aretusa_flash_bundle.flash_messenger:
        class: AppBundle\Listener\Flash
        arguments:
            - "@session"
        tags:
            - { name: kernel.event_listener, event: kernel.response}

    my_favorites.properties:
        class: AppBundle\Listener\MyFavorites
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@security.authorization_checker'
            - "@security.token_storage"
        public: true
        tags:
            - { name: 'monolog.logger', channel: 'security' }

    jms_serializer.naming_strategy:
        class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy