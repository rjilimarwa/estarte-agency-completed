imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            datetime_functions:
                convert_tz: DoctrineExtensions\Query\Mysql\ConvertTz
                date: DoctrineExtensions\Query\Mysql\Date
                date_format: DoctrineExtensions\Query\Mysql\DateFormat

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor.jar"
        yui_css:
             jar: "%kernel.root_dir%/Resources/java/yuicompressor.jar"

fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: no-reply@immobiliere.tn
        sender_name: Immobiliere.tn
    profile:
        form:
            type: AppBundle\Form\User\ProfileFormType
    registration:
        form:
            type: AppBundle\Form\User\RegistrationFormType
        confirmation:
            enabled: true

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template


# Stof\DoctrineExtensionBundle configuration
stof_doctrine_extensions:
    orm:
        default:
            sluggable: true
            tree: true


#LiipImagineBundle
liip_imagine:
    resolvers:
       default:
          web_path: ~

    filter_sets:
        cache: ~
        my_thumb:
            quality: 75
            filters:
                # Transforms 50x40 to 32x32, while cropping the width
                thumbnail: { size: [32, 32], mode: outbound }
        my_thumb_in:
            filters:
                # Transforms 50x40 to 32x26, no cropping
                thumbnail: { size: [32, 32], mode: inset }
        slider:
            quality: 75
            filters:
                thumbnail: { size: [1080, 300], mode: inset }

        standard_850_592:
            quality: 80
            filters:
                resize:
                    size: [850, 592]

        standard_150_104:
            quality: 80
            filters:
                resize:
                    size: [150, 104]

        standard_200_200:
            quality: 80
            filters:
                resize:
                    size: [200, 200]

        standard_300_180:
            quality: 80
            filters:
                resize:
                    size: [300, 180]

        standard_80_80:
            quality: 80
            filters:
                resize:
                    size: [80, 80]
        relative_75:
            quality: 80
            filters:
                relative_resize: { heighten: 75, mode: inset }


#nelmio_cors:
#    defaults:
#        allow_credentials: false
#        allow_origin: []
#        allow_headers: []
#        allow_methods: []
#        expose_headers: []
#        max_age: 0
#        hosts: []
#        origin_regex: false
#        forced_allow_origin_value: ~
#    paths:
#        '^/api/':
#            allow_origin: ['*']
#            allow_headers: ['*']
#            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
#            max_age: 3600
#        '^/':
#            origin_regex: true
#            allow_origin: ['^http://localhost:[0-9]+']
#            allow_headers: ['X-Custom-Auth']
#            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
#            max_age: 3600
#            hosts: ['^api\.']
#
#fos_rest:
#    body_converter:
#        enabled: true
#        validate: true
#        validation_errors_argument: violations
#    view:
#        formats: { json: true, xml: false, rss: false, twig: true }
#        view_response_listener: true
#    serializer:
#        serialize_null: true
#    format_listener:
#        rules:
#            - { path: '^/api', priorities: ['json'], fallback_format: 'json' }
#            - { path: '^/', priorities: [ 'text/html', '*/*'], fallback_format: html, prefer_extension: true }
#    param_fetcher_listener: force
#    routing_loader:
#        default_format: json
#    exception:
#        enabled: true
#        codes:
#           { AppBundle\Exception\ResourceValidationException: 400, \Exception: 500, \Exception: 405, \Exception: 404 }
#        messages:
#           { AppBundle\Exception\ResourceValidationException: true }

#sensio_framework_extra:
#    view: { annotations: true }
#    request: { converters: true }
